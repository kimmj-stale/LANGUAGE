/**
 * literal은 정수형(Integer)과 실수형(real)형이 존재
 * 실수형 literal은 정수형보다 훨씬 더 크고 작은 수를 정확하게 표현해야 함
*/
/**
 * 실수형 literal의 표현
 * 십진형
 * - 정수부 + 소수점 + 소수부 로 구성
 * 3.14 는 (정수부 3) + (소수점 . ) + (소수부 14)로 구성
 * - 십진형 literal에서 소수점 앞/뒤에 0이 있을 경우 생략 가능
 * ex) 100.0 = 100. , - 0.7 = -.7
*/
/**
 * 지수형 literal
 * 10진수의 소수부 / 지수부는 e나 E, 부호 , 지수로 구성됨 지수가 양수일 경우 + 생략가능
 * ex) 0.034 = 34e-4 / 34000 = 34E+3 or 34E3 으로 표현 (e 나 E는 상관없음)
 * 
*/
/**
 * 문자형(char) literal
 * char은 ''로 묶여서 사용 , 1바이트의 메모리에 저장
 * 실제 저장되는 형식은 아스크 코드로 저장됨
 * 'A' , 'z' , '7' , '\n' , '\0' 등이 char
*/
/**
 * excape sequence(확장 문자열)
 * \의 사용을 이용하여 문자열에 이용됨
 * \" , \' , \? , \\ => 각각 " , ' , ? , \ 출력
 * %% => % 출력
 * \n => 줄바꿈
 * \t => 탭
 * \r => carriage return
 * \b => backspace
 * \a => 내장 벨소리 출력
*/
/**
 * 문자열(string) literal
 * ""로 묶여서 한 문자씩 2진수로 메모리에 저장됨
 * ex) "c ++" => 'c' , ' ' , '+' , '+' , '\0(NULL)'로 나뉨
 * 문자열 끝에는 문자열의 끝을 의미하는 null문자가 자동적으로 붙음
 * ex) 'A' 와 "A"는 다르다 => "A" = 'A' , '/0(NULL)'
*/